name: Release

on:
  push:
    tags:
      - '*-release'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Check rust version
      run: rustc --version --verbose
    
    - name: Execute release script
      run: |
        chmod +x release.sh
        ./release.sh
    
    - name: Verify release package
      run: |
        if [ ! -f "release-pkg.zip" ]; then
          echo "Error: release-pkg.zip not found"
          exit 1
        fi
        echo "Release package size: $(du -h release-pkg.zip | cut -f1)"
        echo "Release package contents:"
        unzip -l release-pkg.zip
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Release ${{ github.ref_name }}
          
          This release contains pre-built binaries for multiple architectures.
          
          ### Contents
          - guest-test binaries for x86_64 and aarch64 architectures
          
          ### Installation
          1. Download the `release-pkg.zip` file
          2. Extract the archive
          3. Use the appropriate binary for your architecture
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-pkg.zip
        asset_name: release-pkg.zip
        asset_content_type: application/zip